name: SNMP Server CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.8', '3.9', '3.10', '3.11']

    steps:
    - uses: actions/checkout@v3

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Cache pip packages
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pytest pytest-asyncio pytest-cov

    - name: Run linting
      run: |
        pip install pylint
        pylint snmp_server.py

    - name: Create test configuration files
      run: |
        echo "${{ secrets.CONFIG_YAML }}" > config.yaml
        echo "${{ secrets.DATA_CSV }}" > data.csv

    - name: Run tests with coverage
      run: |
        sudo python -m pytest tests/ --cov=. --cov-report=xml -v

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        flags: unittests
        fail_ci_if_error: true

  integration-test:
    runs-on: ubuntu-latest
    needs: test

    steps:
    - uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Create test configuration
      run: |
        echo "${{ secrets.CONFIG_YAML }}" > config.yaml
        echo "${{ secrets.DATA_CSV }}" > data.csv

    - name: Start SNMP server
      run: |
        sudo python snmp_server.py &
        sleep 5  # Wait for server to start

    - name: Run integration tests
      run: |
        sudo python integration_tests/test_snmp_server.py

    - name: Clean up
      run: |
        sudo pkill -f "python snmp_server.py"
